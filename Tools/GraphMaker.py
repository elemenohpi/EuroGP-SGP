import pandas as pd
import argparse
from os import listdir
from os.path import isfile, join
import matplotlib.pyplot as plt
import numpy as np


def is_txt(file_name: str):
    tokens = file_name.split(".")
    extension = tokens[-1]
    if extension == "txt":
        return True
    return False


def process_DEAP_results(path, output):
    files = [f for f in listdir(path) if isfile(join(path, f))]

    for file_name in files:
        # check if the file format is .txt, otherwise, continue
        if not is_txt(file_name):
            continue
        file_path = join(path, file_name)
        out_file_name = file_name.split(".")[0] + ".csv"
        output_path = join(output, out_file_name)
        out_content = "gen, fitness, avg\n"
        with open(file_path, "+r") as DEAP_file:
            lines = DEAP_file.readlines()
            lines = lines[3:]
            for line in lines:
                tokens = line.split("\t")
                processed_line = tokens[0] + ", " + tokens[4] + ", " + tokens[2]
                out_content += processed_line + "\n"

        with open(output_path, "w+") as processed_file:
            processed_file.write(out_content)


def parse_arguments():
    parser = argparse.ArgumentParser(description="The plotting tool of SGP")

    parser.add_argument("-DEAP", help="Processes results generated by DEAP library and outputs files ready to be "
                                      "plotted with this tool")
    args = parser.parse_args()

    if args.DEAP:
        output_directory = input("Enter the output directory: ")
        process_DEAP_results(path=args.DEAP, output=output_directory)
    else:
        print("SGP GraphMaker V1.0b\nNo option given. Use -h for more information\nExiting...")


if __name__ == "__main__":
    parse_arguments()
